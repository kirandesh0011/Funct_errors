// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ElectionCampus {
    uint256 public totalVotesPersonX;
    uint256 public totalVotesPersonY;
    
    address public personX;
    address public personY;
    
    constructor(address _personX, address _personY) {
        personX = _personX;
        personY = _personY;
    }
    
    function voteForPersonX(uint256 _votes) external {
        totalVotesPersonX += _votes;
    }
    
    function voteForPersonY(uint256 _votes) external {
        totalVotesPersonY += _votes;
    }
    
    function nomineeEligibility(uint256 _age) external pure {
        assert(_age > 35);
    }
    
    function checkResult() external view {
        require(totalVotesPersonX != 50 && totalVotesPersonY != 50, "Invalid Number: Cannot decide who is the winner");
        
        if (totalVotesPersonX == totalVotesPersonY) {
            revert("Election committee summoned for Re-election");
        }
    }
}
